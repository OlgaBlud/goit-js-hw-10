{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst timeInput = document.querySelector('#datetime-picker');\nconst startTimerBtn = document.querySelector('[data-start]');\nconst timer = document.querySelector('.timer');\n\nstartTimerBtn.disabled = true;\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedTime = selectedDates[0];\n    const currentTime = Date.now();\n    // const diffTime = selectedTime - currentTime;\n    // console.log(currentTime);\n    // console.log(selectedTime);\n    // console.log(diffTime);\n    if (selectedTime < currentTime) {\n      startTimerBtn.disabled = true;\n      //   window.alert('Please choose a date in the future');\n      iziToast.error({\n        title: 'Error',\n        titleColor: '#fff',\n        titleSize: '16px',\n        titleLineHeight: '1.5',\n        message: 'Please choose a date in the future',\n        messageColor: '#fff',\n        messageSize: '16px',\n        messageLineHeight: '1.5',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        iconUrl: '../img/error.svg',\n      });\n    } else {\n      userSelectedDate = selectedTime;\n      startTimerBtn.classList.add('active-btn');\n      startTimerBtn.disabled = false;\n\n      //   console.log(userSelectedDate);\n    }\n  },\n};\n\nflatpickr(timeInput, options);\n\nstartTimerBtn.addEventListener('click', setTimerOnStartTimerBtn);\nfunction setTimerOnStartTimerBtn() {\n  //   console.log('click');\n  startTimerBtn.classList.remove('active-btn');\n  startTimerBtn.disabled = true;\n  timeInput.disabled = true;\n\n  const intervalId = setInterval(() => {\n    // console.log(userSelectedDate - Date.now());\n    const leftDurationMs = userSelectedDate - Date.now();\n    const leftTime = convertMs(leftDurationMs);\n    const days = leftTime.days.toString().padStart(2, '0');\n    const hours = leftTime.hours.toString().padStart(2, '0');\n    const minutes = leftTime.minutes.toString().padStart(2, '0');\n    const seconds = leftTime.seconds.toString().padStart(2, '0');\n\n    timer.innerHTML = `<div class=\"field\">\n          <span class=\"value\" data-days>${days}</span>\n          <span class=\"label\">Days</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"value\" data-hours>${hours}</span>\n          <span class=\"label\">Hours</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"value\" data-minutes>${minutes}</span>\n          <span class=\"label\">Minutes</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"value\" data-seconds>${seconds}</span>\n          <span class=\"label\">Seconds</span>\n        </div>`;\n    console.log(days, hours, minutes, seconds);\n  }, 1000);\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n    timeInput.disabled = false;\n  }, userSelectedDate - Date.now());\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n"],"names":["timeInput","startTimerBtn","timer","userSelectedDate","options","selectedDates","selectedTime","currentTime","iziToast","flatpickr","setTimerOnStartTimerBtn","intervalId","leftDurationMs","leftTime","convertMs","days","hours","minutes","seconds","ms"],"mappings":"4xBAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAgB,SAAS,cAAc,cAAc,EACrDC,EAAQ,SAAS,cAAc,QAAQ,EAE7CD,EAAc,SAAW,GACzB,IAAIE,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAC9BE,EAAc,KAAK,MAKrBD,EAAeC,GACjBN,EAAc,SAAW,GAEzBO,EAAS,MAAM,CACb,MAAO,QACP,WAAY,OACZ,UAAW,OACX,gBAAiB,MACjB,QAAS,qCACT,aAAc,OACd,YAAa,OACb,kBAAmB,MACnB,gBAAiB,UACjB,SAAU,WACV,QAAS,kBACjB,CAAO,IAEDL,EAAmBG,EACnBL,EAAc,UAAU,IAAI,YAAY,EACxCA,EAAc,SAAW,GAI5B,CACH,EAEAQ,EAAUT,EAAWI,CAAO,EAE5BH,EAAc,iBAAiB,QAASS,CAAuB,EAC/D,SAASA,GAA0B,CAEjCT,EAAc,UAAU,OAAO,YAAY,EAC3CA,EAAc,SAAW,GACzBD,EAAU,SAAW,GAErB,MAAMW,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAiBT,EAAmB,KAAK,IAAG,EAC5CU,EAAWC,EAAUF,CAAc,EACnCG,EAAOF,EAAS,KAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EAC/CG,EAAQH,EAAS,MAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACjDI,EAAUJ,EAAS,QAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EACrDK,EAAUL,EAAS,QAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAE3DX,EAAM,UAAY;AAAA,0CACoBa,CAAI;AAAA;AAAA;AAAA;AAAA,2CAIHC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAIHC,CAAO;AAAA;AAAA;AAAA;AAAA,6CAIPC,CAAO;AAAA;AAAA,gBAGhD,QAAQ,IAAIH,EAAMC,EAAOC,EAASC,CAAO,CAC1C,EAAE,GAAI,EAEP,WAAW,IAAM,CACf,cAAcP,CAAU,EACxBX,EAAU,SAAW,EACtB,EAAEG,EAAmB,KAAK,IAAG,CAAE,CAClC,CAEA,SAASW,EAAUK,EAAI,CAKrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}